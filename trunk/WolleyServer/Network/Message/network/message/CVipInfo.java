// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CVipInfo.proto

package network.message;

public final class CVipInfo {
  private CVipInfo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface VipNtfInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:network.message.VipNtfInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 currentPoint = 1;</code>
     *
     * <pre>
     ** 当前VIP点数 
     * </pre>
     */
    boolean hasCurrentPoint();
    /**
     * <code>required int32 currentPoint = 1;</code>
     *
     * <pre>
     ** 当前VIP点数 
     * </pre>
     */
    int getCurrentPoint();

    /**
     * <code>required int32 currentLevel = 2;</code>
     *
     * <pre>
     ** 当前VIP等级 
     * </pre>
     */
    boolean hasCurrentLevel();
    /**
     * <code>required int32 currentLevel = 2;</code>
     *
     * <pre>
     ** 当前VIP等级 
     * </pre>
     */
    int getCurrentLevel();

    /**
     * <code>required int32 nextLoginPoint = 3;</code>
     *
     * <pre>
     ** 下次登录可以获取的VIP点数 
     * </pre>
     */
    boolean hasNextLoginPoint();
    /**
     * <code>required int32 nextLoginPoint = 3;</code>
     *
     * <pre>
     ** 下次登录可以获取的VIP点数 
     * </pre>
     */
    int getNextLoginPoint();

    /**
     * <code>required int32 cloginDays = 4;</code>
     *
     * <pre>
     ** 连续登录天数 
     * </pre>
     */
    boolean hasCloginDays();
    /**
     * <code>required int32 cloginDays = 4;</code>
     *
     * <pre>
     ** 连续登录天数 
     * </pre>
     */
    int getCloginDays();

    /**
     * <code>required .network.message.VipProgInfo prog = 5;</code>
     */
    boolean hasProg();
    /**
     * <code>required .network.message.VipProgInfo prog = 5;</code>
     */
    network.message.CVipInfo.VipProgInfo getProg();
    /**
     * <code>required .network.message.VipProgInfo prog = 5;</code>
     */
    network.message.CVipInfo.VipProgInfoOrBuilder getProgOrBuilder();
  }
  /**
   * Protobuf type {@code network.message.VipNtfInfo}
   *
   * <pre>
   ** VIP通知信息 
   * </pre>
   */
  public static final class VipNtfInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:network.message.VipNtfInfo)
      VipNtfInfoOrBuilder {
    // Use VipNtfInfo.newBuilder() to construct.
    private VipNtfInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VipNtfInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VipNtfInfo defaultInstance;
    public static VipNtfInfo getDefaultInstance() {
      return defaultInstance;
    }

    public VipNtfInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VipNtfInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              currentPoint_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              currentLevel_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              nextLoginPoint_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              cloginDays_ = input.readInt32();
              break;
            }
            case 42: {
              network.message.CVipInfo.VipProgInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = prog_.toBuilder();
              }
              prog_ = input.readMessage(network.message.CVipInfo.VipProgInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(prog_);
                prog_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return network.message.CVipInfo.internal_static_network_message_VipNtfInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return network.message.CVipInfo.internal_static_network_message_VipNtfInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              network.message.CVipInfo.VipNtfInfo.class, network.message.CVipInfo.VipNtfInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<VipNtfInfo> PARSER =
        new com.google.protobuf.AbstractParser<VipNtfInfo>() {
      public VipNtfInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VipNtfInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VipNtfInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CURRENTPOINT_FIELD_NUMBER = 1;
    private int currentPoint_;
    /**
     * <code>required int32 currentPoint = 1;</code>
     *
     * <pre>
     ** 当前VIP点数 
     * </pre>
     */
    public boolean hasCurrentPoint() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 currentPoint = 1;</code>
     *
     * <pre>
     ** 当前VIP点数 
     * </pre>
     */
    public int getCurrentPoint() {
      return currentPoint_;
    }

    public static final int CURRENTLEVEL_FIELD_NUMBER = 2;
    private int currentLevel_;
    /**
     * <code>required int32 currentLevel = 2;</code>
     *
     * <pre>
     ** 当前VIP等级 
     * </pre>
     */
    public boolean hasCurrentLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 currentLevel = 2;</code>
     *
     * <pre>
     ** 当前VIP等级 
     * </pre>
     */
    public int getCurrentLevel() {
      return currentLevel_;
    }

    public static final int NEXTLOGINPOINT_FIELD_NUMBER = 3;
    private int nextLoginPoint_;
    /**
     * <code>required int32 nextLoginPoint = 3;</code>
     *
     * <pre>
     ** 下次登录可以获取的VIP点数 
     * </pre>
     */
    public boolean hasNextLoginPoint() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 nextLoginPoint = 3;</code>
     *
     * <pre>
     ** 下次登录可以获取的VIP点数 
     * </pre>
     */
    public int getNextLoginPoint() {
      return nextLoginPoint_;
    }

    public static final int CLOGINDAYS_FIELD_NUMBER = 4;
    private int cloginDays_;
    /**
     * <code>required int32 cloginDays = 4;</code>
     *
     * <pre>
     ** 连续登录天数 
     * </pre>
     */
    public boolean hasCloginDays() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 cloginDays = 4;</code>
     *
     * <pre>
     ** 连续登录天数 
     * </pre>
     */
    public int getCloginDays() {
      return cloginDays_;
    }

    public static final int PROG_FIELD_NUMBER = 5;
    private network.message.CVipInfo.VipProgInfo prog_;
    /**
     * <code>required .network.message.VipProgInfo prog = 5;</code>
     */
    public boolean hasProg() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .network.message.VipProgInfo prog = 5;</code>
     */
    public network.message.CVipInfo.VipProgInfo getProg() {
      return prog_;
    }
    /**
     * <code>required .network.message.VipProgInfo prog = 5;</code>
     */
    public network.message.CVipInfo.VipProgInfoOrBuilder getProgOrBuilder() {
      return prog_;
    }

    private void initFields() {
      currentPoint_ = 0;
      currentLevel_ = 0;
      nextLoginPoint_ = 0;
      cloginDays_ = 0;
      prog_ = network.message.CVipInfo.VipProgInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCurrentPoint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurrentLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNextLoginPoint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCloginDays()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProg()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getProg().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, currentPoint_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, currentLevel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, nextLoginPoint_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, cloginDays_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, prog_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, currentPoint_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, currentLevel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, nextLoginPoint_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, cloginDays_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, prog_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static network.message.CVipInfo.VipNtfInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static network.message.CVipInfo.VipNtfInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static network.message.CVipInfo.VipNtfInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static network.message.CVipInfo.VipNtfInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static network.message.CVipInfo.VipNtfInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static network.message.CVipInfo.VipNtfInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static network.message.CVipInfo.VipNtfInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static network.message.CVipInfo.VipNtfInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static network.message.CVipInfo.VipNtfInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static network.message.CVipInfo.VipNtfInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(network.message.CVipInfo.VipNtfInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code network.message.VipNtfInfo}
     *
     * <pre>
     ** VIP通知信息 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:network.message.VipNtfInfo)
        network.message.CVipInfo.VipNtfInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return network.message.CVipInfo.internal_static_network_message_VipNtfInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return network.message.CVipInfo.internal_static_network_message_VipNtfInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                network.message.CVipInfo.VipNtfInfo.class, network.message.CVipInfo.VipNtfInfo.Builder.class);
      }

      // Construct using network.message.CVipInfo.VipNtfInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getProgFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        currentPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        currentLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        nextLoginPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cloginDays_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (progBuilder_ == null) {
          prog_ = network.message.CVipInfo.VipProgInfo.getDefaultInstance();
        } else {
          progBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return network.message.CVipInfo.internal_static_network_message_VipNtfInfo_descriptor;
      }

      public network.message.CVipInfo.VipNtfInfo getDefaultInstanceForType() {
        return network.message.CVipInfo.VipNtfInfo.getDefaultInstance();
      }

      public network.message.CVipInfo.VipNtfInfo build() {
        network.message.CVipInfo.VipNtfInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public network.message.CVipInfo.VipNtfInfo buildPartial() {
        network.message.CVipInfo.VipNtfInfo result = new network.message.CVipInfo.VipNtfInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.currentPoint_ = currentPoint_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentLevel_ = currentLevel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.nextLoginPoint_ = nextLoginPoint_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cloginDays_ = cloginDays_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (progBuilder_ == null) {
          result.prog_ = prog_;
        } else {
          result.prog_ = progBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof network.message.CVipInfo.VipNtfInfo) {
          return mergeFrom((network.message.CVipInfo.VipNtfInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(network.message.CVipInfo.VipNtfInfo other) {
        if (other == network.message.CVipInfo.VipNtfInfo.getDefaultInstance()) return this;
        if (other.hasCurrentPoint()) {
          setCurrentPoint(other.getCurrentPoint());
        }
        if (other.hasCurrentLevel()) {
          setCurrentLevel(other.getCurrentLevel());
        }
        if (other.hasNextLoginPoint()) {
          setNextLoginPoint(other.getNextLoginPoint());
        }
        if (other.hasCloginDays()) {
          setCloginDays(other.getCloginDays());
        }
        if (other.hasProg()) {
          mergeProg(other.getProg());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCurrentPoint()) {
          
          return false;
        }
        if (!hasCurrentLevel()) {
          
          return false;
        }
        if (!hasNextLoginPoint()) {
          
          return false;
        }
        if (!hasCloginDays()) {
          
          return false;
        }
        if (!hasProg()) {
          
          return false;
        }
        if (!getProg().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        network.message.CVipInfo.VipNtfInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (network.message.CVipInfo.VipNtfInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int currentPoint_ ;
      /**
       * <code>required int32 currentPoint = 1;</code>
       *
       * <pre>
       ** 当前VIP点数 
       * </pre>
       */
      public boolean hasCurrentPoint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 currentPoint = 1;</code>
       *
       * <pre>
       ** 当前VIP点数 
       * </pre>
       */
      public int getCurrentPoint() {
        return currentPoint_;
      }
      /**
       * <code>required int32 currentPoint = 1;</code>
       *
       * <pre>
       ** 当前VIP点数 
       * </pre>
       */
      public Builder setCurrentPoint(int value) {
        bitField0_ |= 0x00000001;
        currentPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 currentPoint = 1;</code>
       *
       * <pre>
       ** 当前VIP点数 
       * </pre>
       */
      public Builder clearCurrentPoint() {
        bitField0_ = (bitField0_ & ~0x00000001);
        currentPoint_ = 0;
        onChanged();
        return this;
      }

      private int currentLevel_ ;
      /**
       * <code>required int32 currentLevel = 2;</code>
       *
       * <pre>
       ** 当前VIP等级 
       * </pre>
       */
      public boolean hasCurrentLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 currentLevel = 2;</code>
       *
       * <pre>
       ** 当前VIP等级 
       * </pre>
       */
      public int getCurrentLevel() {
        return currentLevel_;
      }
      /**
       * <code>required int32 currentLevel = 2;</code>
       *
       * <pre>
       ** 当前VIP等级 
       * </pre>
       */
      public Builder setCurrentLevel(int value) {
        bitField0_ |= 0x00000002;
        currentLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 currentLevel = 2;</code>
       *
       * <pre>
       ** 当前VIP等级 
       * </pre>
       */
      public Builder clearCurrentLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentLevel_ = 0;
        onChanged();
        return this;
      }

      private int nextLoginPoint_ ;
      /**
       * <code>required int32 nextLoginPoint = 3;</code>
       *
       * <pre>
       ** 下次登录可以获取的VIP点数 
       * </pre>
       */
      public boolean hasNextLoginPoint() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 nextLoginPoint = 3;</code>
       *
       * <pre>
       ** 下次登录可以获取的VIP点数 
       * </pre>
       */
      public int getNextLoginPoint() {
        return nextLoginPoint_;
      }
      /**
       * <code>required int32 nextLoginPoint = 3;</code>
       *
       * <pre>
       ** 下次登录可以获取的VIP点数 
       * </pre>
       */
      public Builder setNextLoginPoint(int value) {
        bitField0_ |= 0x00000004;
        nextLoginPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 nextLoginPoint = 3;</code>
       *
       * <pre>
       ** 下次登录可以获取的VIP点数 
       * </pre>
       */
      public Builder clearNextLoginPoint() {
        bitField0_ = (bitField0_ & ~0x00000004);
        nextLoginPoint_ = 0;
        onChanged();
        return this;
      }

      private int cloginDays_ ;
      /**
       * <code>required int32 cloginDays = 4;</code>
       *
       * <pre>
       ** 连续登录天数 
       * </pre>
       */
      public boolean hasCloginDays() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 cloginDays = 4;</code>
       *
       * <pre>
       ** 连续登录天数 
       * </pre>
       */
      public int getCloginDays() {
        return cloginDays_;
      }
      /**
       * <code>required int32 cloginDays = 4;</code>
       *
       * <pre>
       ** 连续登录天数 
       * </pre>
       */
      public Builder setCloginDays(int value) {
        bitField0_ |= 0x00000008;
        cloginDays_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cloginDays = 4;</code>
       *
       * <pre>
       ** 连续登录天数 
       * </pre>
       */
      public Builder clearCloginDays() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cloginDays_ = 0;
        onChanged();
        return this;
      }

      private network.message.CVipInfo.VipProgInfo prog_ = network.message.CVipInfo.VipProgInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          network.message.CVipInfo.VipProgInfo, network.message.CVipInfo.VipProgInfo.Builder, network.message.CVipInfo.VipProgInfoOrBuilder> progBuilder_;
      /**
       * <code>required .network.message.VipProgInfo prog = 5;</code>
       */
      public boolean hasProg() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .network.message.VipProgInfo prog = 5;</code>
       */
      public network.message.CVipInfo.VipProgInfo getProg() {
        if (progBuilder_ == null) {
          return prog_;
        } else {
          return progBuilder_.getMessage();
        }
      }
      /**
       * <code>required .network.message.VipProgInfo prog = 5;</code>
       */
      public Builder setProg(network.message.CVipInfo.VipProgInfo value) {
        if (progBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          prog_ = value;
          onChanged();
        } else {
          progBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .network.message.VipProgInfo prog = 5;</code>
       */
      public Builder setProg(
          network.message.CVipInfo.VipProgInfo.Builder builderForValue) {
        if (progBuilder_ == null) {
          prog_ = builderForValue.build();
          onChanged();
        } else {
          progBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .network.message.VipProgInfo prog = 5;</code>
       */
      public Builder mergeProg(network.message.CVipInfo.VipProgInfo value) {
        if (progBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              prog_ != network.message.CVipInfo.VipProgInfo.getDefaultInstance()) {
            prog_ =
              network.message.CVipInfo.VipProgInfo.newBuilder(prog_).mergeFrom(value).buildPartial();
          } else {
            prog_ = value;
          }
          onChanged();
        } else {
          progBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .network.message.VipProgInfo prog = 5;</code>
       */
      public Builder clearProg() {
        if (progBuilder_ == null) {
          prog_ = network.message.CVipInfo.VipProgInfo.getDefaultInstance();
          onChanged();
        } else {
          progBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>required .network.message.VipProgInfo prog = 5;</code>
       */
      public network.message.CVipInfo.VipProgInfo.Builder getProgBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getProgFieldBuilder().getBuilder();
      }
      /**
       * <code>required .network.message.VipProgInfo prog = 5;</code>
       */
      public network.message.CVipInfo.VipProgInfoOrBuilder getProgOrBuilder() {
        if (progBuilder_ != null) {
          return progBuilder_.getMessageOrBuilder();
        } else {
          return prog_;
        }
      }
      /**
       * <code>required .network.message.VipProgInfo prog = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          network.message.CVipInfo.VipProgInfo, network.message.CVipInfo.VipProgInfo.Builder, network.message.CVipInfo.VipProgInfoOrBuilder> 
          getProgFieldBuilder() {
        if (progBuilder_ == null) {
          progBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              network.message.CVipInfo.VipProgInfo, network.message.CVipInfo.VipProgInfo.Builder, network.message.CVipInfo.VipProgInfoOrBuilder>(
                  getProg(),
                  getParentForChildren(),
                  isClean());
          prog_ = null;
        }
        return progBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:network.message.VipNtfInfo)
    }

    static {
      defaultInstance = new VipNtfInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:network.message.VipNtfInfo)
  }

  public interface VipProgInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:network.message.VipProgInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     */
    int getId();

    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     ** 临时VIP等级 
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     ** 临时VIP等级 
     * </pre>
     */
    int getLevel();

    /**
     * <code>required int64 progStart = 3;</code>
     *
     * <pre>
     ** 临时VIP开始时间 
     * </pre>
     */
    boolean hasProgStart();
    /**
     * <code>required int64 progStart = 3;</code>
     *
     * <pre>
     ** 临时VIP开始时间 
     * </pre>
     */
    long getProgStart();

    /**
     * <code>required int64 progEnd = 4;</code>
     *
     * <pre>
     ** 临时VIP结束时间 
     * </pre>
     */
    boolean hasProgEnd();
    /**
     * <code>required int64 progEnd = 4;</code>
     *
     * <pre>
     ** 临时VIP结束时间 
     * </pre>
     */
    long getProgEnd();

    /**
     * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
     */
    java.util.List<network.message.CVipInfo.VipCondInfo> 
        getConditionsList();
    /**
     * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
     */
    network.message.CVipInfo.VipCondInfo getConditions(int index);
    /**
     * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
     */
    int getConditionsCount();
    /**
     * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
     */
    java.util.List<? extends network.message.CVipInfo.VipCondInfoOrBuilder> 
        getConditionsOrBuilderList();
    /**
     * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
     */
    network.message.CVipInfo.VipCondInfoOrBuilder getConditionsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code network.message.VipProgInfo}
   *
   * <pre>
   ** 免费VIP信息 
   * </pre>
   */
  public static final class VipProgInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:network.message.VipProgInfo)
      VipProgInfoOrBuilder {
    // Use VipProgInfo.newBuilder() to construct.
    private VipProgInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VipProgInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VipProgInfo defaultInstance;
    public static VipProgInfo getDefaultInstance() {
      return defaultInstance;
    }

    public VipProgInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VipProgInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              level_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              progStart_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              progEnd_ = input.readInt64();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                conditions_ = new java.util.ArrayList<network.message.CVipInfo.VipCondInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              conditions_.add(input.readMessage(network.message.CVipInfo.VipCondInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          conditions_ = java.util.Collections.unmodifiableList(conditions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return network.message.CVipInfo.internal_static_network_message_VipProgInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return network.message.CVipInfo.internal_static_network_message_VipProgInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              network.message.CVipInfo.VipProgInfo.class, network.message.CVipInfo.VipProgInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<VipProgInfo> PARSER =
        new com.google.protobuf.AbstractParser<VipProgInfo>() {
      public VipProgInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VipProgInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VipProgInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int LEVEL_FIELD_NUMBER = 2;
    private int level_;
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     ** 临时VIP等级 
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     ** 临时VIP等级 
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    public static final int PROGSTART_FIELD_NUMBER = 3;
    private long progStart_;
    /**
     * <code>required int64 progStart = 3;</code>
     *
     * <pre>
     ** 临时VIP开始时间 
     * </pre>
     */
    public boolean hasProgStart() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 progStart = 3;</code>
     *
     * <pre>
     ** 临时VIP开始时间 
     * </pre>
     */
    public long getProgStart() {
      return progStart_;
    }

    public static final int PROGEND_FIELD_NUMBER = 4;
    private long progEnd_;
    /**
     * <code>required int64 progEnd = 4;</code>
     *
     * <pre>
     ** 临时VIP结束时间 
     * </pre>
     */
    public boolean hasProgEnd() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 progEnd = 4;</code>
     *
     * <pre>
     ** 临时VIP结束时间 
     * </pre>
     */
    public long getProgEnd() {
      return progEnd_;
    }

    public static final int CONDITIONS_FIELD_NUMBER = 5;
    private java.util.List<network.message.CVipInfo.VipCondInfo> conditions_;
    /**
     * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
     */
    public java.util.List<network.message.CVipInfo.VipCondInfo> getConditionsList() {
      return conditions_;
    }
    /**
     * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
     */
    public java.util.List<? extends network.message.CVipInfo.VipCondInfoOrBuilder> 
        getConditionsOrBuilderList() {
      return conditions_;
    }
    /**
     * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
     */
    public int getConditionsCount() {
      return conditions_.size();
    }
    /**
     * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
     */
    public network.message.CVipInfo.VipCondInfo getConditions(int index) {
      return conditions_.get(index);
    }
    /**
     * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
     */
    public network.message.CVipInfo.VipCondInfoOrBuilder getConditionsOrBuilder(
        int index) {
      return conditions_.get(index);
    }

    private void initFields() {
      id_ = 0;
      level_ = 0;
      progStart_ = 0L;
      progEnd_ = 0L;
      conditions_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProgStart()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProgEnd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getConditionsCount(); i++) {
        if (!getConditions(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, level_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, progStart_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, progEnd_);
      }
      for (int i = 0; i < conditions_.size(); i++) {
        output.writeMessage(5, conditions_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, level_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, progStart_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, progEnd_);
      }
      for (int i = 0; i < conditions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, conditions_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static network.message.CVipInfo.VipProgInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static network.message.CVipInfo.VipProgInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static network.message.CVipInfo.VipProgInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static network.message.CVipInfo.VipProgInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static network.message.CVipInfo.VipProgInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static network.message.CVipInfo.VipProgInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static network.message.CVipInfo.VipProgInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static network.message.CVipInfo.VipProgInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static network.message.CVipInfo.VipProgInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static network.message.CVipInfo.VipProgInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(network.message.CVipInfo.VipProgInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code network.message.VipProgInfo}
     *
     * <pre>
     ** 免费VIP信息 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:network.message.VipProgInfo)
        network.message.CVipInfo.VipProgInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return network.message.CVipInfo.internal_static_network_message_VipProgInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return network.message.CVipInfo.internal_static_network_message_VipProgInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                network.message.CVipInfo.VipProgInfo.class, network.message.CVipInfo.VipProgInfo.Builder.class);
      }

      // Construct using network.message.CVipInfo.VipProgInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getConditionsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        progStart_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        progEnd_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (conditionsBuilder_ == null) {
          conditions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          conditionsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return network.message.CVipInfo.internal_static_network_message_VipProgInfo_descriptor;
      }

      public network.message.CVipInfo.VipProgInfo getDefaultInstanceForType() {
        return network.message.CVipInfo.VipProgInfo.getDefaultInstance();
      }

      public network.message.CVipInfo.VipProgInfo build() {
        network.message.CVipInfo.VipProgInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public network.message.CVipInfo.VipProgInfo buildPartial() {
        network.message.CVipInfo.VipProgInfo result = new network.message.CVipInfo.VipProgInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.progStart_ = progStart_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.progEnd_ = progEnd_;
        if (conditionsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            conditions_ = java.util.Collections.unmodifiableList(conditions_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.conditions_ = conditions_;
        } else {
          result.conditions_ = conditionsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof network.message.CVipInfo.VipProgInfo) {
          return mergeFrom((network.message.CVipInfo.VipProgInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(network.message.CVipInfo.VipProgInfo other) {
        if (other == network.message.CVipInfo.VipProgInfo.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasProgStart()) {
          setProgStart(other.getProgStart());
        }
        if (other.hasProgEnd()) {
          setProgEnd(other.getProgEnd());
        }
        if (conditionsBuilder_ == null) {
          if (!other.conditions_.isEmpty()) {
            if (conditions_.isEmpty()) {
              conditions_ = other.conditions_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureConditionsIsMutable();
              conditions_.addAll(other.conditions_);
            }
            onChanged();
          }
        } else {
          if (!other.conditions_.isEmpty()) {
            if (conditionsBuilder_.isEmpty()) {
              conditionsBuilder_.dispose();
              conditionsBuilder_ = null;
              conditions_ = other.conditions_;
              bitField0_ = (bitField0_ & ~0x00000010);
              conditionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getConditionsFieldBuilder() : null;
            } else {
              conditionsBuilder_.addAllMessages(other.conditions_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasLevel()) {
          
          return false;
        }
        if (!hasProgStart()) {
          
          return false;
        }
        if (!hasProgEnd()) {
          
          return false;
        }
        for (int i = 0; i < getConditionsCount(); i++) {
          if (!getConditions(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        network.message.CVipInfo.VipProgInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (network.message.CVipInfo.VipProgInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       ** 临时VIP等级 
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       ** 临时VIP等级 
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       ** 临时VIP等级 
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000002;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       ** 临时VIP等级 
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = 0;
        onChanged();
        return this;
      }

      private long progStart_ ;
      /**
       * <code>required int64 progStart = 3;</code>
       *
       * <pre>
       ** 临时VIP开始时间 
       * </pre>
       */
      public boolean hasProgStart() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 progStart = 3;</code>
       *
       * <pre>
       ** 临时VIP开始时间 
       * </pre>
       */
      public long getProgStart() {
        return progStart_;
      }
      /**
       * <code>required int64 progStart = 3;</code>
       *
       * <pre>
       ** 临时VIP开始时间 
       * </pre>
       */
      public Builder setProgStart(long value) {
        bitField0_ |= 0x00000004;
        progStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 progStart = 3;</code>
       *
       * <pre>
       ** 临时VIP开始时间 
       * </pre>
       */
      public Builder clearProgStart() {
        bitField0_ = (bitField0_ & ~0x00000004);
        progStart_ = 0L;
        onChanged();
        return this;
      }

      private long progEnd_ ;
      /**
       * <code>required int64 progEnd = 4;</code>
       *
       * <pre>
       ** 临时VIP结束时间 
       * </pre>
       */
      public boolean hasProgEnd() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 progEnd = 4;</code>
       *
       * <pre>
       ** 临时VIP结束时间 
       * </pre>
       */
      public long getProgEnd() {
        return progEnd_;
      }
      /**
       * <code>required int64 progEnd = 4;</code>
       *
       * <pre>
       ** 临时VIP结束时间 
       * </pre>
       */
      public Builder setProgEnd(long value) {
        bitField0_ |= 0x00000008;
        progEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 progEnd = 4;</code>
       *
       * <pre>
       ** 临时VIP结束时间 
       * </pre>
       */
      public Builder clearProgEnd() {
        bitField0_ = (bitField0_ & ~0x00000008);
        progEnd_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<network.message.CVipInfo.VipCondInfo> conditions_ =
        java.util.Collections.emptyList();
      private void ensureConditionsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          conditions_ = new java.util.ArrayList<network.message.CVipInfo.VipCondInfo>(conditions_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          network.message.CVipInfo.VipCondInfo, network.message.CVipInfo.VipCondInfo.Builder, network.message.CVipInfo.VipCondInfoOrBuilder> conditionsBuilder_;

      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public java.util.List<network.message.CVipInfo.VipCondInfo> getConditionsList() {
        if (conditionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(conditions_);
        } else {
          return conditionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public int getConditionsCount() {
        if (conditionsBuilder_ == null) {
          return conditions_.size();
        } else {
          return conditionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public network.message.CVipInfo.VipCondInfo getConditions(int index) {
        if (conditionsBuilder_ == null) {
          return conditions_.get(index);
        } else {
          return conditionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public Builder setConditions(
          int index, network.message.CVipInfo.VipCondInfo value) {
        if (conditionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConditionsIsMutable();
          conditions_.set(index, value);
          onChanged();
        } else {
          conditionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public Builder setConditions(
          int index, network.message.CVipInfo.VipCondInfo.Builder builderForValue) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          conditions_.set(index, builderForValue.build());
          onChanged();
        } else {
          conditionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public Builder addConditions(network.message.CVipInfo.VipCondInfo value) {
        if (conditionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConditionsIsMutable();
          conditions_.add(value);
          onChanged();
        } else {
          conditionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public Builder addConditions(
          int index, network.message.CVipInfo.VipCondInfo value) {
        if (conditionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConditionsIsMutable();
          conditions_.add(index, value);
          onChanged();
        } else {
          conditionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public Builder addConditions(
          network.message.CVipInfo.VipCondInfo.Builder builderForValue) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          conditions_.add(builderForValue.build());
          onChanged();
        } else {
          conditionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public Builder addConditions(
          int index, network.message.CVipInfo.VipCondInfo.Builder builderForValue) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          conditions_.add(index, builderForValue.build());
          onChanged();
        } else {
          conditionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public Builder addAllConditions(
          java.lang.Iterable<? extends network.message.CVipInfo.VipCondInfo> values) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, conditions_);
          onChanged();
        } else {
          conditionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public Builder clearConditions() {
        if (conditionsBuilder_ == null) {
          conditions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          conditionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public Builder removeConditions(int index) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          conditions_.remove(index);
          onChanged();
        } else {
          conditionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public network.message.CVipInfo.VipCondInfo.Builder getConditionsBuilder(
          int index) {
        return getConditionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public network.message.CVipInfo.VipCondInfoOrBuilder getConditionsOrBuilder(
          int index) {
        if (conditionsBuilder_ == null) {
          return conditions_.get(index);  } else {
          return conditionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public java.util.List<? extends network.message.CVipInfo.VipCondInfoOrBuilder> 
           getConditionsOrBuilderList() {
        if (conditionsBuilder_ != null) {
          return conditionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(conditions_);
        }
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public network.message.CVipInfo.VipCondInfo.Builder addConditionsBuilder() {
        return getConditionsFieldBuilder().addBuilder(
            network.message.CVipInfo.VipCondInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public network.message.CVipInfo.VipCondInfo.Builder addConditionsBuilder(
          int index) {
        return getConditionsFieldBuilder().addBuilder(
            index, network.message.CVipInfo.VipCondInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .network.message.VipCondInfo conditions = 5;</code>
       */
      public java.util.List<network.message.CVipInfo.VipCondInfo.Builder> 
           getConditionsBuilderList() {
        return getConditionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          network.message.CVipInfo.VipCondInfo, network.message.CVipInfo.VipCondInfo.Builder, network.message.CVipInfo.VipCondInfoOrBuilder> 
          getConditionsFieldBuilder() {
        if (conditionsBuilder_ == null) {
          conditionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              network.message.CVipInfo.VipCondInfo, network.message.CVipInfo.VipCondInfo.Builder, network.message.CVipInfo.VipCondInfoOrBuilder>(
                  conditions_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          conditions_ = null;
        }
        return conditionsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:network.message.VipProgInfo)
    }

    static {
      defaultInstance = new VipProgInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:network.message.VipProgInfo)
  }

  public interface VipCondInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:network.message.VipCondInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 condType = 1;</code>
     *
     * <pre>
     ** 配制表ID 
     * </pre>
     */
    boolean hasCondType();
    /**
     * <code>required int32 condType = 1;</code>
     *
     * <pre>
     ** 配制表ID 
     * </pre>
     */
    int getCondType();

    /**
     * <code>required int64 condNumber = 2;</code>
     *
     * <pre>
     ** 主城达到某个等级或POWER达到某个点数时时给VIP(0表示无限制) 
     * </pre>
     */
    boolean hasCondNumber();
    /**
     * <code>required int64 condNumber = 2;</code>
     *
     * <pre>
     ** 主城达到某个等级或POWER达到某个点数时时给VIP(0表示无限制) 
     * </pre>
     */
    long getCondNumber();
  }
  /**
   * Protobuf type {@code network.message.VipCondInfo}
   *
   * <pre>
   ** 达到条件给免费VIP信息 
   * </pre>
   */
  public static final class VipCondInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:network.message.VipCondInfo)
      VipCondInfoOrBuilder {
    // Use VipCondInfo.newBuilder() to construct.
    private VipCondInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VipCondInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VipCondInfo defaultInstance;
    public static VipCondInfo getDefaultInstance() {
      return defaultInstance;
    }

    public VipCondInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VipCondInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              condType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              condNumber_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return network.message.CVipInfo.internal_static_network_message_VipCondInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return network.message.CVipInfo.internal_static_network_message_VipCondInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              network.message.CVipInfo.VipCondInfo.class, network.message.CVipInfo.VipCondInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<VipCondInfo> PARSER =
        new com.google.protobuf.AbstractParser<VipCondInfo>() {
      public VipCondInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VipCondInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VipCondInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CONDTYPE_FIELD_NUMBER = 1;
    private int condType_;
    /**
     * <code>required int32 condType = 1;</code>
     *
     * <pre>
     ** 配制表ID 
     * </pre>
     */
    public boolean hasCondType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 condType = 1;</code>
     *
     * <pre>
     ** 配制表ID 
     * </pre>
     */
    public int getCondType() {
      return condType_;
    }

    public static final int CONDNUMBER_FIELD_NUMBER = 2;
    private long condNumber_;
    /**
     * <code>required int64 condNumber = 2;</code>
     *
     * <pre>
     ** 主城达到某个等级或POWER达到某个点数时时给VIP(0表示无限制) 
     * </pre>
     */
    public boolean hasCondNumber() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 condNumber = 2;</code>
     *
     * <pre>
     ** 主城达到某个等级或POWER达到某个点数时时给VIP(0表示无限制) 
     * </pre>
     */
    public long getCondNumber() {
      return condNumber_;
    }

    private void initFields() {
      condType_ = 0;
      condNumber_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCondType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCondNumber()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, condType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, condNumber_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, condType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, condNumber_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static network.message.CVipInfo.VipCondInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static network.message.CVipInfo.VipCondInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static network.message.CVipInfo.VipCondInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static network.message.CVipInfo.VipCondInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static network.message.CVipInfo.VipCondInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static network.message.CVipInfo.VipCondInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static network.message.CVipInfo.VipCondInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static network.message.CVipInfo.VipCondInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static network.message.CVipInfo.VipCondInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static network.message.CVipInfo.VipCondInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(network.message.CVipInfo.VipCondInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code network.message.VipCondInfo}
     *
     * <pre>
     ** 达到条件给免费VIP信息 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:network.message.VipCondInfo)
        network.message.CVipInfo.VipCondInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return network.message.CVipInfo.internal_static_network_message_VipCondInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return network.message.CVipInfo.internal_static_network_message_VipCondInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                network.message.CVipInfo.VipCondInfo.class, network.message.CVipInfo.VipCondInfo.Builder.class);
      }

      // Construct using network.message.CVipInfo.VipCondInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        condType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        condNumber_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return network.message.CVipInfo.internal_static_network_message_VipCondInfo_descriptor;
      }

      public network.message.CVipInfo.VipCondInfo getDefaultInstanceForType() {
        return network.message.CVipInfo.VipCondInfo.getDefaultInstance();
      }

      public network.message.CVipInfo.VipCondInfo build() {
        network.message.CVipInfo.VipCondInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public network.message.CVipInfo.VipCondInfo buildPartial() {
        network.message.CVipInfo.VipCondInfo result = new network.message.CVipInfo.VipCondInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.condType_ = condType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.condNumber_ = condNumber_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof network.message.CVipInfo.VipCondInfo) {
          return mergeFrom((network.message.CVipInfo.VipCondInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(network.message.CVipInfo.VipCondInfo other) {
        if (other == network.message.CVipInfo.VipCondInfo.getDefaultInstance()) return this;
        if (other.hasCondType()) {
          setCondType(other.getCondType());
        }
        if (other.hasCondNumber()) {
          setCondNumber(other.getCondNumber());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCondType()) {
          
          return false;
        }
        if (!hasCondNumber()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        network.message.CVipInfo.VipCondInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (network.message.CVipInfo.VipCondInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int condType_ ;
      /**
       * <code>required int32 condType = 1;</code>
       *
       * <pre>
       ** 配制表ID 
       * </pre>
       */
      public boolean hasCondType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 condType = 1;</code>
       *
       * <pre>
       ** 配制表ID 
       * </pre>
       */
      public int getCondType() {
        return condType_;
      }
      /**
       * <code>required int32 condType = 1;</code>
       *
       * <pre>
       ** 配制表ID 
       * </pre>
       */
      public Builder setCondType(int value) {
        bitField0_ |= 0x00000001;
        condType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 condType = 1;</code>
       *
       * <pre>
       ** 配制表ID 
       * </pre>
       */
      public Builder clearCondType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        condType_ = 0;
        onChanged();
        return this;
      }

      private long condNumber_ ;
      /**
       * <code>required int64 condNumber = 2;</code>
       *
       * <pre>
       ** 主城达到某个等级或POWER达到某个点数时时给VIP(0表示无限制) 
       * </pre>
       */
      public boolean hasCondNumber() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 condNumber = 2;</code>
       *
       * <pre>
       ** 主城达到某个等级或POWER达到某个点数时时给VIP(0表示无限制) 
       * </pre>
       */
      public long getCondNumber() {
        return condNumber_;
      }
      /**
       * <code>required int64 condNumber = 2;</code>
       *
       * <pre>
       ** 主城达到某个等级或POWER达到某个点数时时给VIP(0表示无限制) 
       * </pre>
       */
      public Builder setCondNumber(long value) {
        bitField0_ |= 0x00000002;
        condNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 condNumber = 2;</code>
       *
       * <pre>
       ** 主城达到某个等级或POWER达到某个点数时时给VIP(0表示无限制) 
       * </pre>
       */
      public Builder clearCondNumber() {
        bitField0_ = (bitField0_ & ~0x00000002);
        condNumber_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:network.message.VipCondInfo)
    }

    static {
      defaultInstance = new VipCondInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:network.message.VipCondInfo)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_network_message_VipNtfInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_network_message_VipNtfInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_network_message_VipProgInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_network_message_VipProgInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_network_message_VipCondInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_network_message_VipCondInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016CVipInfo.proto\022\017network.message\"\220\001\n\nVi" +
      "pNtfInfo\022\024\n\014currentPoint\030\001 \002(\005\022\024\n\014curren" +
      "tLevel\030\002 \002(\005\022\026\n\016nextLoginPoint\030\003 \002(\005\022\022\n\n" +
      "cloginDays\030\004 \002(\005\022*\n\004prog\030\005 \002(\0132\034.network" +
      ".message.VipProgInfo\"~\n\013VipProgInfo\022\n\n\002i" +
      "d\030\001 \002(\005\022\r\n\005level\030\002 \002(\005\022\021\n\tprogStart\030\003 \002(" +
      "\003\022\017\n\007progEnd\030\004 \002(\003\0220\n\nconditions\030\005 \003(\0132\034" +
      ".network.message.VipCondInfo\"3\n\013VipCondI" +
      "nfo\022\020\n\010condType\030\001 \002(\005\022\022\n\ncondNumber\030\002 \002(" +
      "\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_network_message_VipNtfInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_network_message_VipNtfInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_network_message_VipNtfInfo_descriptor,
        new java.lang.String[] { "CurrentPoint", "CurrentLevel", "NextLoginPoint", "CloginDays", "Prog", });
    internal_static_network_message_VipProgInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_network_message_VipProgInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_network_message_VipProgInfo_descriptor,
        new java.lang.String[] { "Id", "Level", "ProgStart", "ProgEnd", "Conditions", });
    internal_static_network_message_VipCondInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_network_message_VipCondInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_network_message_VipCondInfo_descriptor,
        new java.lang.String[] { "CondType", "CondNumber", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
